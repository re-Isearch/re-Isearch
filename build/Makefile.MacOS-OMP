CC_ABI_VERSION=1
#GCC_VERSION=-12
#GCC_VERSION=
#GCC_VERSION=-43
#GCC_VERSION_X=4.2.1
############################################################################
#############################################################################
.KEEP_STATE:
#
# See ../Makefile for compilation instructions.
#
.SUFFIXES: $(SUFFIXES) .c .cxx .sob .sob64

BERKELEY_DB_ROOT =  /opt/homebrew/Cellar/berkeley-db/18.1.40_2
LIBBDB=-ldb


## This must be where NEWER versions of the OpenSSL libs were installed.
## It is ONLY used by the autoremote plugin and that depends upon a later
## version of 1.1.1 or newer-- which may not be pre-installed.
OPENSSL_LIBS_LOCATION= /opt/homebrew/Cellar/openssl@3/3.0.8

#
# Install Directory
#
# Where should I install executables (make install)?
#
INSTALL=/usr/local/bin
INSTALL_LIBS=/usr/local/lib/ib

MAGIC_INC=-I/opt/homebrew/Cellar/libmagic/5.45/include
MAGIC_LIB=/opt/homebrew/Cellar/libmagic/5.45/lib

EXTRA_INC= -I$(BERKELEY_DB_ROOT)/include $(MAGIC_INC)
DEFAULT_LIB_INSTALL_PATH="../lib:.:$(INSTALL_LIBS):$(MAGIC_LIB)"

#MALLOC_OBJ = malloc.o


DB=db-4.3
#DB=db
#
# Compiler
#
#purify=purify


### NOTE the following defines
## O_BUILD_IB32     build the 32-bit address space version (chunks < 2 GB)
## O_BUILD_IB64     build the 64-bit address space version (chunks > 2 GB)
## USE_LIBMAGIC     is used to use the libmagic libs
## SVR4             a System-V Revision 4 compatible API
## WWW_SUPPORT      include WWW support 
## DBSN_EXTENSIONS  read the code (there are 3 levels of extensions!)
##
##


CC=CC
cc=cc
LD=$(purify) CC
LDOPTS = -lC

#CC=insure
#cc=insure
#LD=insure

CPATH=#/usr/local/bin/

CC=$(CPATH)g++$(GCC_VERSION)
cc=$(CPATH)gcc$(GCC_VERSION)

CC=$(CPATH)clang 
cc=$(CPATH)clang



LD=$(purify) $(CC)
RPATH=$(DEFAULT_LIB_INSTALL_PATH)
LDOPTS = -undefined dynamic_lookup -rpath $(RPATH)

GCC_LIBDIR=/opt/homebrew/lib/gcc/current 


TIMEOUT=`../build/timeout`

#
# Malloc options
# INSECURE=1 means no checks
# DEFAULT_TRIM_THRESHOLD= When to trum
#MALLOC_OPTIONS= -DINSECURE=0 -DDEFAULT_TRIM_THRESHOLD=16U*1024L*1024L
MALLOC_OPTIONS= -DINSECURE=1 -DDEFAULT_TRIM_THRESHOLD=16U*1024L*1024L

#
# Compiler Flags
#
# Uncomment the appropriate entry
#
#CFLAGS=-Wall -Dfar=
#DEFINES= -pthread -DSVR4 -DWWW_SUPPORT -D__CSTRING__ -DBSN_EXTENSIONS=2  $(DOPT) $(STANDALONE) -DO_BUILD_IB64=1
#DEFINES= -DWWW_SUPPORT -D__CSTRING__ -DBSN_EXTENSIONS=2  $(DOPT) $(STANDALONE) -DO_BUILD_IB32=1

DEFINES= -pthread -DUSE_LIBMAGIC -DSVR4 -DBSD -DWWW_SUPPORT -D__CSTRING__ -DBSN_EXTENSIONS=2  $(DOPT) $(STANDALONE) -DO_BUILD_IB64=1



#LIBX=64
DEPEND = CC -xM1 $(DEFINES) $(INC)

#PROF=
#PROF= -xprofile=collect:/var/tmp/IB
#PROF=-xprofile=use:/var/tmp/IB


##### Normal Compile
WARN= +w2
#DEBUG= -g
#OPTIM=-mt
#PIC=-KPIC
#PIC=-Kpic
#OPTIM=-fast -mt -xO4
# SuperSPARC version
#OPT= -noex -cg92 -temp=/tmp -fsimple=2 -xsafe=mem $(OPTIM) -xarch=v8 -xcache=16/32/4:1024/32/1 -xchip=super
# Ultra version
#OPT= -cg92 -temp=/tmp -fsimple=2 -xsafe=mem  -fast -xO4 -xarch=v8plusa -xcache=16/32/4:4096/32/1 -xchip=ultra
#CFLAGS= $(WARN) $(OPT) $(DEBUG) $(DEFINES) $(PROF)
#CCFLAGS= $(PIC) $(WARN) $(OPT) $(DEBUG) $(DEFINES) $(PROF)
#SHARED = -G $(DEBUG) 
COMPILER=

#RPATH= -Wl,-rpath,$(DEFAULT_LIB_INSTALL_PATH)


##### egcs Compile
#CC=$(CPATH)g++ #-fabi-version=$(CC_ABI_VERSION)
#cc=$(CPATH)gcc
#LD=$(CPATH)g++
#LDOPTS += $(MALLOC_OBJ) 
WARN= 
OPT=  #-O5 -ffast-math -fomit-frame-pointer 

DEBUG=-g
PIC = -fPIC

# Production version
## @@@@ PRODUCTION
DEBUG=-s
PIC=-Kpic -m64
OPT= -m64 -fsimple=2 -fast 
OPT= -m64 
#COMPILER=.gcc-v$(CC_ABI_VERSION)

#DEBUG=-g -fmudflap

## DEBUG OR NOT???
#OPT=-O3 -ftree-vectorize  -ffast-math -msse2 
DEBUG=
OPT=-O3 -fvectorize -ffast-math -ftree-vectorize -fopenmp 
# OPT=-g 
PIC=-fpic

CFLAGS= $(WARN) $(OPT) $(DEBUG) $(DEFINES) $(PROF)
CCFLAGS= $(PIC) $(WARN) $(OPT) $(DEBUG) $(DEFINES) $(PROF)
SHARED = -shared $(PIC) $(DEBUG)
#COMPILER=_g

#SHARED=-shared -m64

######## DEBUG
#WARN= +w2
#DEBUG= -xF -noex -g -xs -fsimple=2 -xsafe=mem -xtarget=ss10/712 #-fast -xO3
#OPT= -cg92 -temp=/tmp
#CFLAGS= $(WARN) $(OPT) $(DEBUG) $(DEFINES) $(PROF)
#CCFLAGS= -KPIC $(WARN) $(OPT) $(DEBUG) $(DEFINES) $(PROF)
#SHARED = -G $(DEBUG)
#COMPILER=_d

##### Insure++
#WARN= +w2
#DEBUG=-g -xs
#OPT= -cg92 -xtarget=ss20/712 -temp=/tmp
#CCFLAGS= -KPIC $(WARN) $(OPT) $(DEBUG) $(DEFINES) $(PROF)
#SHARED = -G -g
#COMPILER=_insure


############### End Differences ######################################
DEBUG= #-g 
LDFLAGS +=  $(DEBUG) $(PROF) -m64 
#
# EXTRA= -lnsl -ldl -lm -lmagic $(LIBBDB)
EXTRA=  -ldl -lm -lmagic $(LIBBDB)

#EXTRA=-lm -ldl -lstdc++ 
#EXTRA= -lm -lz -lstdc++
#EXTRA= -lm -lz -lstdc++ -lmudflap 

#
# Executables Directory
#
# Where should I place executables?
#
BIN_DIR=../bin
LIB_DIR=../lib


#
# Document Type Directory
#
# Where are document type sources located?
#
DOCTYPE_DIR=../doctype
SRC_DIR=../src

ifdef BERKELEY_DB_ROOT 
RLDCACHE=$(SRC_DIR)/rldcache.cxx 
else
RLDCACHE=
endif

# 
# That should be all you need to configure
#
VERSION=4.7
CTYPE_VERSION=1
APPS_VERSION=1


PROGRAM =ib$(LIBX)$(COMPILER)
ENGINE  =ibSearch$(LIBX)$(COMPILER)
DOCTYPES=ibDoc$(LIBX)$(COMPILER)
COMMON  =ibUtils$(COMPILER)
IOS     =ibIO$(COMPILER)
CTYPE   =ibLocal
PROCESS =ibProcess$(COMPILER)
APPS    =ibApps$(COMPILER)


EXT_SHARED=.so
EXT_SHARED=.dylib

ST_LIB = $(LIB_DIR)/lib$(PROGRAM).a
SO_LIB = lib$(ENGINE)$(EXT_SHARED)
SH_LIB = lib$(DOCTYPES)$(EXT_SHARED)
CO_LIB = lib$(COMMON)$(EXT_SHARED)
CI_LIB = lib$(IOS)$(EXT_SHARED)
CT_LIB = lib$(CTYPE)$(EXT_SHARED)
PR_LIB = lib$(PROCESS)$(EXT_SHARED)
AP_LIB = lib$(APPS)$(EXT_SHARED)

LIB = $(LIB_DIR)/$(CT_LIB) \
	$(LIB_DIR)/$(CO_LIB) \
	$(LIB_DIR)/$(SO_LIB) \
	$(LIB_DIR)/$(SH_LIB) \
	$(LIB_DIR)/$(PR_LIB) \
	$(LIB_DIR)/$(AP_LIB)
 
EXTRA_LIBS= -L$(BERKELEY_DB_ROOT)/lib
LD_PATH = -L../lib/ -L$(LIB_DIR) -L$(GCC_LIBDIR) -L/usr/local/lib -L/opt/nonmonotonic/ib/lib -L/usr/lib -L$(MAGIC_LIB) $(EXTRA_LIBS) #-WL,"--rpath ../lib:/opt/nonmonotonic/ib/lib:/usr/lib:/usr/local/lib"
LDOPTS +=  $(LD_PATH)
CORELIBS= -l$(COMMON) -l$(ENGINE) -l$(DOCTYPES) -l$(PROCESS)  -l$(IOS) -l$(CTYPE)
LDLIBS += $(LDOPTS) $(CORELIBS) -l$(APPS) -lomp

AR = ar
ARFLAGS = r
RANLIB = ranlib
RANLIB_TEST = [ -f /usr/bin/ranlib -o -f /bin/ranlib ]

CTYPE_SRCS = $(SRC_DIR)/ctype.c \
	$(SRC_DIR)/ranking.c \
	$(SRC_DIR)/extras.c

PROC_SRCS = \
	$(SRC_DIR)/popen.cxx \
	$(SRC_DIR)/process.cxx

BAS_SRCS= \
	$(SRC_DIR)/string.cxx \
	$(SRC_DIR)/qsort.cxx \
	$(SRC_DIR)/vlist.cxx \
	$(SRC_DIR)/plist.cxx \
	$(SRC_DIR)/common.cxx \
	$(SRC_DIR)/error.cxx \
	$(SRC_DIR)/glob.cxx \
	$(SRC_DIR)/fieldmatch.cxx \
	$(SRC_DIR)/pathname.cxx \
	$(SRC_DIR)/inode.cxx \
	$(SRC_DIR)/numbers.cxx \
	$(SRC_DIR)/snefru.cxx \
	$(SRC_DIR)/directory.cxx \
	$(SRC_DIR)/logger.cxx \
	$(SRC_DIR)/mmap.cxx \
	$(SRC_DIR)/object.cxx \
	$(SRC_DIR)/dictionary.cxx \
	$(SRC_DIR)/strlist.cxx \
	$(SRC_DIR)/strstack.cxx \
	$(SRC_DIR)/lang-codes.cxx \
	$(SRC_DIR)/unicode.cxx \
	$(SRC_DIR)/htmlcat.cxx \
	$(SRC_DIR)/date.cxx \
	$(SRC_DIR)/listof.cxx \
	$(SRC_DIR)/hash.cxx \
	$(SRC_DIR)/hashof.cxx \
	$(SRC_DIR)/buffer.cxx \
	$(SRC_DIR)/glist.cxx \
	$(SRC_DIR)/gstack.cxx \
	$(SRC_DIR)/registry.cxx \
	$(SRC_DIR)/fprec.cxx \
	$(SRC_DIR)/fpt.cxx \
	$(SRC_DIR)/crc64.cxx \
	$(SRC_DIR)/utf8.cxx \
	$(SRC_DIR)/eudex.cxx \
	$(SRC_DIR)/metaphone.cxx

IO_SRCS = \
        $(SRC_DIR)/io.cxx \
        $(SRC_DIR)/protman.cxx \
        $(SRC_DIR)/netbox.cxx \
        $(SRC_DIR)/strbox.cxx \
        $(SRC_DIR)/treebox.cxx \
	$(RLDCACHE)

APPS_SRCS= $(SRC_DIR)/iindex_main.cxx $(SRC_DIR)/isearch_main.cxx $(SRC_DIR)/iutil_main.cxx

ENG_SRCS= \
	$(SRC_DIR)/attr.cxx \
	$(SRC_DIR)/attrlist.cxx \
	$(SRC_DIR)/df.cxx \
	$(SRC_DIR)/dfd.cxx \
	$(SRC_DIR)/dfdt.cxx \
	$(SRC_DIR)/dft.cxx \
	$(SRC_DIR)/fc.cxx \
	$(SRC_DIR)/fct.cxx \
	$(SRC_DIR)/nodetree.cxx \
	$(SRC_DIR)/idbobj.cxx \
	$(SRC_DIR)/idb.cxx \
	$(SRC_DIR)/metadata.cxx \
	$(SRC_DIR)/scan.cxx \
	$(SRC_DIR)/vidb.cxx \
	$(SRC_DIR)/index.cxx \
	$(SRC_DIR)/numsearch.cxx \
	$(SRC_DIR)/datesearch.cxx \
	$(SRC_DIR)/dsearch.cxx \
	$(SRC_DIR)/geosearch.cxx \
	$(SRC_DIR)/nlist.cxx \
	$(SRC_DIR)/dlist.cxx \
	$(SRC_DIR)/nfldmgr.cxx \
	$(SRC_DIR)/intlist.cxx \
	$(SRC_DIR)/intfield.cxx \
	$(SRC_DIR)/gpolylist.cxx \
	$(SRC_DIR)/gpolyfield.cxx \
	$(SRC_DIR)/bboxfield.cxx \
	$(SRC_DIR)/bboxlist.cxx \
	$(SRC_DIR)/nfield.cxx \
	$(SRC_DIR)/dfield.cxx \
	$(SRC_DIR)/lock.cxx \
	$(SRC_DIR)/iresult.cxx \
	$(SRC_DIR)/resource.cxx \
	$(SRC_DIR)/irset.cxx \
	$(SRC_DIR)/mdt.cxx \
	$(SRC_DIR)/mdthashtable.cxx \
	$(SRC_DIR)/mdtrec.cxx \
	$(SRC_DIR)/opobj.cxx \
	$(SRC_DIR)/operand.cxx \
	$(SRC_DIR)/operator.cxx \
	$(SRC_DIR)/opstack.cxx \
	$(SRC_DIR)/reclist.cxx \
	$(SRC_DIR)/record.cxx \
	$(SRC_DIR)/recordsyntax.cxx \
	$(SRC_DIR)/result.cxx \
	$(SRC_DIR)/rset.cxx \
	$(SRC_DIR)/soundex.cxx \
	$(SRC_DIR)/squery.cxx \
	$(SRC_DIR)/thesaurus.cxx \
	$(SRC_DIR)/sterm.cxx \
	$(SRC_DIR)/termobj.cxx \
	$(SRC_DIR)/rcache.cxx \
	$(SRC_DIR)/fcache.cxx \
	$(SRC_DIR)/filemap.cxx  \
	$(SRC_DIR)/mergeunit.cxx \
	$(SRC_DIR)/infix2rpn.cxx \
	$(SRC_DIR)/tokengen.cxx \
	$(SRC_DIR)/merge.cxx \
	$(SRC_DIR)/stoplist.cxx \
	$(SRC_DIR)/support.cxx


DOC_SRCS = \
	$(SRC_DIR)/dtreg.cxx \
	$(DOCTYPE_DIR)/doctype.cxx \
	$(DOCTYPE_DIR)/autodetect.cxx \
	$(DOCTYPE_DIR)/resourcedoc.cxx \
	$(DOCTYPE_DIR)/image.cxx \
	$(DOCTYPE_DIR)/plaintext.cxx \
	$(DOCTYPE_DIR)/simple.cxx \
	$(DOCTYPE_DIR)/para.cxx \
	$(DOCTYPE_DIR)/ptext.cxx \
	$(DOCTYPE_DIR)/binary.cxx \
	$(DOCTYPE_DIR)/filter.cxx \
	$(DOCTYPE_DIR)/xfilter.cxx \
	$(DOCTYPE_DIR)/ftp.cxx \
	$(DOCTYPE_DIR)/bibtex.cxx \
	$(DOCTYPE_DIR)/firstline.cxx \
	$(DOCTYPE_DIR)/colondoc.cxx \
	$(DOCTYPE_DIR)/tsldoc.cxx \
	$(DOCTYPE_DIR)/csvdoc.cxx \
	$(DOCTYPE_DIR)/ozsearch.cxx \
	$(DOCTYPE_DIR)/psdoc.cxx \
	$(DOCTYPE_DIR)/iknowdoc.cxx \
	$(DOCTYPE_DIR)/roadsdoc.cxx \
	$(DOCTYPE_DIR)/colongrp.cxx \
	$(DOCTYPE_DIR)/euromedia.cxx \
	$(DOCTYPE_DIR)/mismedia.cxx \
	$(DOCTYPE_DIR)/bibcolon.cxx \
	$(DOCTYPE_DIR)/dif.cxx \
	$(DOCTYPE_DIR)/iafadoc.cxx \
	$(DOCTYPE_DIR)/mailfolder.cxx \
	$(DOCTYPE_DIR)/newsfolder.cxx \
	$(DOCTYPE_DIR)/referbib.cxx \
	$(DOCTYPE_DIR)/irlist.cxx \
	$(DOCTYPE_DIR)/mailman.cxx \
	$(DOCTYPE_DIR)/listdigest.cxx \
	$(DOCTYPE_DIR)/maildigest.cxx \
	$(DOCTYPE_DIR)/yahoolist.cxx \
	$(DOCTYPE_DIR)/digesttoc.cxx \
	$(DOCTYPE_DIR)/medline.cxx \
	$(DOCTYPE_DIR)/filmline.cxx \
	$(DOCTYPE_DIR)/oneline.cxx \
	$(DOCTYPE_DIR)/dvbline.cxx \
	$(DOCTYPE_DIR)/memodoc.cxx \
	$(DOCTYPE_DIR)/soif.cxx \
	$(DOCTYPE_DIR)/harvest.cxx \
	$(DOCTYPE_DIR)/sgmltag.cxx \
	$(DOCTYPE_DIR)/gils.cxx \
	$(DOCTYPE_DIR)/sgmlnorm.cxx \
	$(DOCTYPE_DIR)/sgml.cxx \
	$(DOCTYPE_DIR)/xml.cxx \
	$(DOCTYPE_DIR)/gilsxml.cxx \
	$(DOCTYPE_DIR)/gils_isoteia.cxx \
	$(DOCTYPE_DIR)/rss2.cxx \
	$(DOCTYPE_DIR)/html.cxx \
	$(DOCTYPE_DIR)/HTMLEntities.cxx \
	$(DOCTYPE_DIR)/htmlmeta.cxx \
	$(DOCTYPE_DIR)/htmlhead.cxx \
	$(DOCTYPE_DIR)/htmlremote.cxx \
	$(DOCTYPE_DIR)/antihtml.cxx \
	$(DOCTYPE_DIR)/htmlcache.cxx \
	$(DOCTYPE_DIR)/filter2.cxx \
	$(DOCTYPE_DIR)/pandoc.cxx \
	$(DOCTYPE_DIR)/pdf.cxx

PLUGIN_SRCS = \
	$(DOCTYPE_DIR)/null.cxx \
	$(DOCTYPE_DIR)/autoremote.cxx \
	$(DOCTYPE_DIR)/odt.cxx \
	$(DOCTYPE_DIR)/odt2.cxx \
	$(DOCTYPE_DIR)/odt_j.cxx \
	$(DOCTYPE_DIR)/msword.cxx \
	$(DOCTYPE_DIR)/msoffice.cxx \
	$(DOCTYPE_DIR)/msrtf.cxx \
	$(DOCTYPE_DIR)/msole.cxx \
	$(DOCTYPE_DIR)/msexcel.cxx \
	$(DOCTYPE_DIR)/rtf.cxx \
	$(DOCTYPE_DIR)/uspat.cxx \
	$(DOCTYPE_DIR)/estat.cxx \
	$(DOCTYPE_DIR)/isoteia.cxx \
	$(DOCTYPE_DIR)/adobe_pdf.cxx \
	$(DOCTYPE_DIR)/pdfdoc.cxx \
	$(DOCTYPE_DIR)/djvu.cxx \
	$(DOCTYPE_DIR)/text.cxx



PROC_OBJ= $(PROC_SRCS: .cxx=.o)
BAS_OBJ = $(BAS_SRCS:.cxx=.o)
IO_OBJ  = $(IO_SRCS:.cxx=.o)
ENG_OBJ = $(ENG_SRCS:.cxx=.o) $(SRC_DIR)/defs.o
APPS_OBJ= $(APPS_SRCS:.cxx=.o)
BAS_H   = $(BAS_SRCS:.cxx=.hxx)


SRCS    = $(CTYPE_SRCS) $(PROC_SRCS) $(BAS_SRCS) $(DOC_SRCS) $(ENG_SRCS) $(IO_SRCS) $(APPS_SRCS)
SOURCES = $(PLUGIN_SRCS) $(SRCS) $(SRC_DIR)/defs.cxx

HEADERS = $(SRCS:.cxx=.hxx)

DOC_OBJ= $(DOC_SRCS:.cxx=.o)
CTYPE_OBJ= $(CTYPE_SRCS:.c=.o)
PLUGINS=  $(PLUGIN_SRCS:.cxx=.sob$(LIBX))

H= gdt-sys.h gdt.h 
INC= -I. -I$(DOCTYPE_DIR) -I$(SRC_DIR) $(EXTRA_INC)
RM= rm -f

target: all tools

static: $(SRCS) $(ST_LIB)
	make PIC="" SHARED="" $(ST_LIB)
	

64:
	make LIBX=64 DOPT=-DO_BUILD_IB64

64-plugins:
	make LIBX=64 DOPT=-DO_BUILD_IB64 plugins

touch-plugins:
	touch $(PLUGIN_SRCS)


all: $(MALLOC_OBJ) \
	conf.h.inc \
	dirs \
	$(PROC_OBJ) \
	io_lib \
	$(BAS_OBJ) $(ENG_OBJ) $(DOC_OBJ) $(LIB) Iindex.o Isearch.o Iutil.o Idelete.o \
	$(BIN_DIR)/Iindex$(LIBX)$(COMPILER) \
	$(BIN_DIR)/Isearch$(LIBX)$(COMPILER) \
	$(BIN_DIR)/Iutil$(LIBX)$(COMPILER) \
	$(BIN_DIR)/Idelete$(LIBX)$(COMPILER) \
	$(BIN_DIR)/Iwatch \
	$(BIN_DIR)/zpresent \
	$(BIN_DIR)/zsearch \
	$(BIN_DIR)/zipper


dirs: ~/.ib/lib/plugins

~/.ib/lib/plugins:
	mkdir -p ~/.ib/lib/plugins 
 
tools: $(BIN_DIR)/siscompress $(BIN_DIR)/sisdump $(BIN_DIR)/sisdump32 $(BIN_DIR)/sischeck

io_lib: $(LIB_DIR)/$(CI_LIB) 

plugins: $(PLUGINS) ../doctype/doctype.hxx ../src/idb.hxx

$(SRC_DIR)/platform.h:
	touch $(SRC_DIR)/platform.h

conf.h.inc:
	/bin/sh ./configure.MacOS.sh $(cc)

$(BIN_DIR)/date_parse: $(SRC_DIR)/date.cxx $(SRC_DIR)/date.hxx 
	$(CC) $(DEFINES) -I ../src -I .  -DMAIN_STUB=1 -o $(BIN_DIR)/date_parse $(SRC_DIR)/date.cxx \
	-L ../lib  $(LDOPTS) $(CORELIBS) $(EXTRA)


recordsyntax: $(SRC_DIR)/recordsyntax.cxx $(SRC_DIR)/recordsyntax.hxx
	$(CC) $(DEFINES) -DMAIN_STUB=1 -o recordsyntax $(SRC_DIR)/recordsyntax.cxx $(LDOPTS) $(CORELIBS) $(EXTRA)
	

snap: $(SOURCES)
	zip ../ib_src_`date "+%Y%m%d%H"` $(SOURCES) $(HEADERS)


$(BIN_DIR)/process_test: $(PROC_OBJ) $(LIB)
	$(CC) -o $@ -DTEST $(SRC_DIR)/process.cxx $(LDLIBS) $(EXTRA)

$(BIN_DIR)/.wrapper: $(SRC_DIR)/wrapper.c
	$(cc)  -static -o $@ $(SRC_DIR)/wrapper.c

$(BIN_DIR)/Iwatch: $(SRC_DIR)/Iwatch.c
	$(cc) -o $@ $(SRC_DIR)/Iwatch.c

$(BIN_DIR)/zipper: $(SRC_DIR)/zipper.cxx
	$(CC) -o $@ $(SRC_DIR)/zipper.cxx

$(BIN_DIR)/zpresent: $(SRC_DIR)/zpresent.cxx
	$(CC) $(INC) $(LDFLAGS) -o $@ $(SRC_DIR)/zpresent.cxx $(LDLIBS) $(EXTRA)


$(BIN_DIR)/zsearch: $(SRC_DIR)/zsearch.cxx
	$(CC) $(INC) $(LDFLAGS) -o $@ $(SRC_DIR)/zsearch.cxx $(LDLIBS) $(EXTRA)
        
$(BIN_DIR)/siscompress: $(SRC_DIR)/siscompress.c
	$(cc) -o $(BIN_DIR)/siscompress $(SRC_DIR)/siscompress.c

$(BIN_DIR)/sischeck: $(SRC_DIR)/sischeck.cxx
	$(CC) -o $@ $(SRC_DIR)/sischeck.cxx $(LD_PATH) $(LDLIBS)

$(BIN_DIR)/sisdump: $(SRC_DIR)/sisdump.c
	$(cc) $(OPT) -o $@ $(SRC_DIR)/sisdump.c

$(BIN_DIR)/sisdump32: $(SRC_DIR)/sisdump32.c
	$(cc) -o $@ $(SRC_DIR)/sisdump32.c

malloc.o: $(SRC_DIR)/malloc.c
	$(CC) $(CFLAGS) $(PIC) $(MALLOC_OPTIONS) -c $(SRC_DIR)/malloc.c

gen_license.o: $(SRC_DIR)/gen_license.cxx
	$(CC) $(CFLAGS) $(INC) -c $(SRC_DIR)/gen_license.cxx

$(BIN_DIR)/gen_license$(LIBX)$(COMPILER):$(LIB)  gen_license.o
	$(LD) $(LDFLAGS) -o $(BIN_DIR)/gen_license$(LIBX)$(COMPILER) gen_license.o $(LDLIBS) $(EXTRA)

Iindex.o: $(SRC_DIR)/Iindex.c
	$(cc) -c -m64 $(SRC_DIR)/Iindex.c

Isearch.o: $(SRC_DIR)/Isearch.c
	$(cc) -c -m64 $(SRC_DIR)/Isearch.c

Iutil.o: $(SRC_DIR)/Iutil.cxx
	$(cc) -c -m64 $(SRC_DIR)/Iutil.c

Idelete.o: $(SRC_DIR)/Idelete.cxx
	$(CC) $(CFLAGS) $(INC) -c $(SRC_DIR)/Idelete.cxx

$(LIB_DIR)/$(CO_LIB):$(BAS_OBJ)
	$(CC) $(SHARED) -o $@.$(VERSION) $(LDOPTS) $(BAS_OBJ)
	rm -f $(LIB_DIR)/$(CO_LIB)
	ln -s $(LIB_DIR)/$(CO_LIB).$(VERSION) $(LIB_DIR)/$(CO_LIB)

$(LIB_DIR)/$(AP_LIB):$(APPS_OBJ)
	$(CC) $(SHARED) -o $@.$(APPS_VERSION) $(LDOPTS) $(APPS_OBJ) $(CORELIBS)
	rm -f $(LIB_DIR)/$(AP_LIB)
	ln -s $(LIB_DIR)/$(AP_LIB).$(APPS_VERSION) $(LIB_DIR)/$(AP_LIB)

$(LIB_DIR)/$(PR_LIB):$(PROC_OBJ)
	$(CC) -I. $(SHARED) -o $@.$(VERSION) $(LDOPTS) $(PROC_OBJ)
	rm -f $(LIB_DIR)/$(PR_LIB)
	ln -s $(LIB_DIR)/$(PR_LIB).$(VERSION) $(LIB_DIR)/$(PR_LIB)

$(LIB_DIR)/$(CI_LIB):$(IO_OBJ)
	$(CC) -L/opt/nonmonotonic/ib/lib $(SHARED) -o $@.$(VERSION) $(LDOPTS) $(IO_OBJ) #-l$(DB)
	rm -f $(LIB_DIR)/$(CI_LIB)
	ln -s $(LIB_DIR)/$(CI_LIB).$(VERSION) $(LIB_DIR)/$(CI_LIB)


$(LIB_DIR)/$(CT_LIB):$(CTYPE_OBJ)
	$(cc) $(SHARED) -o $@.$(CTYPE_VERSION) $(CTYPE_OBJ)
	rm -f $(LIB_DIR)/$(CT_LIB)
	ln -s $(LIB_DIR)/$(CT_LIB).$(CTYPE_VERSION) $(LIB_DIR)/$(CT_LIB)

$(LIB_DIR)/$(SO_LIB):$(ENG_OBJ)
	$(CC) $(SHARED) -o $@.$(VERSION) $(ENG_OBJ) $(LDOPTS) -l$(COMMON) -l$(CTYPE) -lm
	rm -f $(LIB_DIR)/$(SO_LIB)
	ln -s $(LIB_DIR)/$(SO_LIB).$(VERSION) $(LIB_DIR)/$(SO_LIB)

$(ST_LIB):$(ENG_OBJ)
	$(AR) $(ARFLAGS) $(ST_LIB) $(ENG_OBJ)
	-if $(RANLIB_TEST); then $(RANLIB) $(ST_LIB); else true; fi

$(LIB_DIR)/$(SH_LIB):$(DOC_OBJ)
	$(CC) $(SHARED) -o $@.$(VERSION) $(DOC_OBJ) $(LDOPTS) -l$(COMMON) -l$(CTYPE)
	rm -f $(LIB_DIR)/$(SH_LIB)
	ln -s $(LIB_DIR)/$(SH_LIB).$(VERSION) $(LIB_DIR)/$(SH_LIB)

$(BIN_DIR)/Iindex$(LIBX)$(COMPILER):$(LIB)  Iindex.o
	$(LD) $(LDFLAGS) -o $(BIN_DIR)/Iindex$(LIBX)$(COMPILER) Iindex.o $(LDLIBS) $(EXTRA)

$(BIN_DIR)/Isearch$(LIBX)$(COMPILER):$(LIB) Isearch.o
	$(LD) $(LDFLAGS) -o $(BIN_DIR)/Isearch$(LIBX)$(COMPILER) Isearch.o $(LDLIBS) $(EXTRA)

$(BIN_DIR)/Iutil$(LIBX)$(COMPILER):$(LIB) Iutil.o
	$(LD) $(LDFLAGS) -o $(BIN_DIR)/Iutil$(LIBX)$(COMPILER) Iutil.o $(LDLIBS) $(EXTRA)

$(BIN_DIR)/Idelete$(LIBX)$(COMPILER):$(LIB) Idelete.o
	$(LD) $(LDFLAGS) -o $(BIN_DIR)/Idelete$(LIBX)$(COMPILER) Idelete.o $(LDLIBS) $(EXTRA)

.cxx.o:
	$(CC) -c $(CCFLAGS) $(INC) -o $@ $<
.c.o:
	$(cc) -c $(PIC) -I. -o $@ $<

#PLUGINOPT="-Wl,--export-dynamic"
PLUGINOPT=


.cxx.sob: ../doctype/doctype.hxx ../src/idb.hxx
	$(CC) $(SHARED) $(CCFLAGS) $(INC) -o $@ $(PLUGINOPT) $< $(LDLIBS)
	-cp $@ ~/.ib/plugins
	-cp $@ /opt/nonmonotonic/ib/lib/plugins



../doctype/autoremote.sob: ../doctype/autoremote.cxx ../doctype/doctype.hxx ../src/idb.hxx
	$(CC) -std=c++11  $(SHARED) $(CCFLAGS) $(INC) -I$(OPENSSL_LIBS_LOCATION)/include -o $@ $(PLUGINOPT) ../doctype/autoremote.cxx $(LDLIBS) -L $(OPENSSL_LIBS_LOCATION)/lib -lssl -lcrypto
	-cp $@ ~/.ib/plugins
	-cp $@ /opt/nonmonotonic/ib/lib/plugins


exif: ../doctype/exif.cxx ../doctype/doctype.hxx ../src/idb.hxx
	$(CC) $(SHARED) $(CCFLAGS) $(INC) -I../3rdparty/TinyEXIF -o $@.sob  ../3rdparty/TinyEXIF/TinyEXIF.cpp ../3rdparty/TinyEXIF/tinyxml2.cpp  $(PLUGINOPT) $< $(LDLIBS)
	cp $@.sob /opt/nonmonotonic/ib/lib/plugins


clean:
	$(RM) *.o ../src/*.o ../doctype/*.o ../doctype/*.sob core 


$(SRC_DIR)/defs.o: $(SRC_DIR)/defs.cxx 
	$(CC) -c $(CCFLAGS) $(INC) -o $(SRC_DIR)/defs.o $(SRC_DIR)/defs.cxx

depend: Makefile.tmpl
	echo "" > .depend
	echo '# DO NOT DELETE THIS LINE -- make depend depends on it. ' >> .depend
	$(DEPEND) $(ENG_SRCS) $(DOC_SRCS) >> .depend
	cat Makefile.tmpl .depend > .Makefile
	rm -f .depend Makefile.BAK
	mv Makefile Makefile.BAK
	mv .Makefile Makefile

wcommon.tar:  $(BAS_SRCS)
	tar cvf wcommon.tar $(BAS_SRCS) $(BAS_H) ../win/contrib

build:
	make clean
	make all

https_test: https_test.cxx
	 $(CC) -o https_test https_test.cxx -I../src -I../doctype -L/usr/local/lib64  -lssl -lcrypto


install:
	@echo "*** Copying Isearch executables to $(INSTALL)/. ***"
	cp $(BIN_DIR)/Iindex $(INSTALL)/.
	cp $(BIN_DIR)/Isearch $(INSTALL)/.
	cp $(BIN_DIR)/Iutil $(INSTALL)/.
	cp $(BIN_DIR)/Idelete $(INSTALL)/.
	cp $(BIN_DIR)/zpresent  $(INSTALL)/.
	cp $(BIN_DIR)/Iwatch $(INSTALL)/.
	cp $(BIN_DIR)/zipper $(INSTALL)/.	
	@echo "*** Copying Isearch shared libs to $(INSTALL_LIBS)/. ***"
	-mkdir $(INSTALL_LIBS)
	cp $(LIB_DIR)/$(CO_LIB).$(VERSION)  $(INSTALL_LIBS)/.
	ln -s $(INSTALL_LIBS)/$(CO_LIB).$(VERSION) $(INSTALL_LIBS)/$(CO_LIB)
	cp $(LIB_DIR)/$(SO_LIB).$(VERSION)  $(INSTALL_LIBS)/.
	ln -s $(INSTALL_LIBS)/$(SO_LIB).$(VERSION) $(INSTALL_LIBS)/$(SO_LIB)
	cp $(LIB_DIR)/$(SH_LIB).$(VERSION)  $(INSTALL_LIBS)/.
	ln -s $(INSTALL_LIBS)/$(SH_LIB).$(VERSION) $(INSTALL_LIBS)/$(SH_LIB)
	cp $(LIB_DIR)/$(SO_LIB).$(VERSION)  $(INSTALL_LIBS)/.
	ln -s $(INSTALL_LIBS)/$(SO_LIB).$(VERSION) $(INSTALL_LIBS)/$(SO_LIB)
	cp $(LIB_DIR)/$(CI_LIB).$(VERSION)  $(INSTALL_LIBS)/.
	ln -s $(INSTALL_LIBS)/$(CI_LIB).$(VERSION) $(INSTALL_LIBS)/$(CI_LIB)
	cp $(LIB_DIR)/$(CT_LIB).$(CTYPE_VERSION)  $(INSTALL_LIBS)/.
	ln -s $(INSTALL_LIBS)/$(CT_LIB).$(CTYPE_VERSION) $(INSTALL_LIBS)/$(CT_LIB)
	cp $(LIB_DIR)/$(PR_LIB).$(VERSION)  $(INSTALL_LIBS)/.
	ln -s $(INSTALL_LIBS)/$(PR_LIB).$(VERSION) $(INSTALL_LIBS)/$(PR_LIB)
	cp $(LIB_DIR)/$(AP_LIB).$(APPS_VERSION)  $(INSTALL_LIBS)/.
	ln -s $(INSTALL_LIBS)/$(AP_LIB).$(APPS_VERSION) $(INSTALL_LIBS)/$(AP_LIB)

# DO NOT DELETE THIS LINE -- make depend depends on it. 
